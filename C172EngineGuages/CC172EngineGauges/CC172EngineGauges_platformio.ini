; ******************************************************************************************
; working environment for template of custom firmware
; ******************************************************************************************
; Common build settings across this custom device
[env_cc172enginegauges]
build_flags =
	${env.build_flags}												; include standard build flags
	-DMF_CUSTOMDEVICE_SUPPORT=1										; Required for Custom Devices
	-DMF_CUSTOMDEVICE_HAS_UPDATE									; if the custom device needs to be updated, uncomment this. W/o the following define it will be done each loop()
	; -DMF_CUSTOMDEVICE_POLL_MS=10 									; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	;-DHAS_CONFIG_IN_FLASH											; undefine this and add your configuration to MFCustomDevicesConfig.h to save the config in Flash !!Core FW version must be at least 2.5.2!!
	-I./src/src/MF_CustomDevice										; don't change this one!
	-I./CC172EngineGauges													; Include files for your custom device, replace "Template" by your folder name
build_src_filter = 
	+<../CC172EngineGauges>													; build files for your custom device, replace "Template" by your folder name
lib_deps =															; You can add additional libraries if required
	lovyan03/LovyanGFX@^1.2.0
custom_core_firmware_version = ESP32_support	; CAUTION check get_version.py								; define the version from the core firmware files your build should base on
custom_source_folder = CC172EngineGauges										; path to your Custom Device Sources, replace "Template" by your folder name
custom_community_project = CC172EngineGauges								; name of the ZIP file, revision will be added during build process
custom_community_folder = CC172EngineGauges							; Folder name inside zip file


[env:CC172EngineGauges_esp32s3]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
lib_ldf_mode = deep+
build_flags =
	${env_cc172enginegauges.build_flags}
	-I./src/_Boards/ESP32/ESP32S3_Devkit
	'-DMOBIFLIGHT_TYPE="CC172EngineGauges ESP32-S3 DevKitC1"'				; this must match with "MobiFlightType" within the .json file
	'-DMOBIFLIGHT_NAME="CC172EngineGauges ESP32-S3 DevKitC1"'
	;-DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DBOARD_HAS_PSRAM
	-DBUFFER_LENGTH=I2C_BUFFER_LENGTH
	;-DUSE_2ND_CORE
	; CAC More below
	; -DARDUINO_USB_MODE=0           ; Serial on USBCDC
	
build_unflags =
  -Wdeprecated-declarations
;  -Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  ${env_cc172enginegauges.build_src_filter}
lib_deps =
	${env.lib_deps}
	${env.custom_lib_deps_ESP32}											; don't change this one!
	${env_cc172enginegauges.lib_deps}
board_build.arduino.memory_type = qio_opi	; required for PSRAM enabled
board_build.memory_type = qio_opi
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}
custom_core_firmware_version = ${env_cc172enginegauges.custom_core_firmware_version}	; don't change this one!
custom_community_project = ${env_cc172enginegauges.custom_community_project}			; don't change this one!
custom_source_folder = ${env_cc172enginegauges.custom_source_folder}					; don't change this one!
custom_community_folder = ${env_cc172enginegauges.custom_community_folder}			; don't change this one!

; CAC Added on:
board_build.psram_type = opi
board_upload.flash_size = 8MB
board_upload.maximum_size = 8388608
